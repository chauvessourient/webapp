"""
Django settings for marketplace project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.getenv('MARKETPLACE_SECRET_KEY', '!!mg?,X&"sfHeTv(nPJb+qzhLZ{L}=]fq_m}I1Uy3BQ`gokNnPGAm^ntG#j]')


# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = os.getenv('MARKETPLACE_DEBUG', False)

ALLOWED_HOSTS = os.getenv('MARKETPLACE_ALLOWED_HOSTS', 'localhost').split(',')


# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'marketplace.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'marketplace.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

MARKETPLACE_DB_ENGINE = os.getenv('MARKETPLACE_DB_ENGINE', 'sqlite3')
MARKETPLACE_DB_NAME = os.getenv('MARKETPLACE_DB_NAME', 'db.sqlite3')
MARKETPLACE_DB_USER = os.getenv('MARKETPLACE_DB_USER', '')
MARKETPLACE_DB_PASSWORD = os.getenv('MARKETPLACE_DB_PASSWORD', '')
MARKETPLACE_DB_HOST = os.getenv('MARKETPLACE_DB_HOST', '')
MARKETPLACE_DB_PORT = os.getenv('MARKETPLACE_DB_PORT', '')

if (MARKETPLACE_DB_ENGINE == 'postgresql'):
    MARKETPLACE_DB_ENGINE = 'django.db.backends.postgresql'
else :
    MARKETPLACE_DB_ENGINE = 'django.db.backends.sqlite3'
    MARKETPLACE_DB_NAME = 'db.sqlite3'

DATABASES = {
    'default': {
        'ENGINE': MARKETPLACE_DB_ENGINE,
        'NAME': MARKETPLACE_DB_NAME,
        'USER': MARKETPLACE_DB_USER,
        'PASSWORD': MARKETPLACE_DB_PASSWORD,
        'HOST': MARKETPLACE_DB_HOST,
        'PORT': MARKETPLACE_DB_PORT
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'
CORS_ORIGIN_ALLOW_ALL = True

MEDIA_ROOT="/media/"

LOGGING = {
    'version': 1,
    'disable_existing_loggers': True,
    'formatters': {
        'simple': {
            'format': '%(levelname)s %(message)s',
             'datefmt': '%y %b %d, %H:%M:%S',
            },
        },
    'handlers': {
        'console': {
            'level': 'INFO',
            'class': 'logging.StreamHandler',
            'formatter': 'simple'
        },
    },
    'loggers': {
        'encoder': {
            'handlers': ['console'],
            'level': 'INFO',
        },
    }
}

REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAuthenticated',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework_simplejwt.authentication.JWTAuthentication',
    ],
    'DEFAULT_RENDERER_CLASSES': (
        'rest_framework.renderers.JSONRenderer',
    )    
}


CELERY_RESULT_BACKEND = 'django-db'
CELERY_BROKER_URL = os.getenv('MARKETPLACE_BROKER_URL', 'amqp://marketplace:marketplacepwd@rabbitmq/marketplace')

CELERY_ACCEPT_CONTENT = ['application/json']
CELERY_TASK_SERIALIZER = 'json'
CELERY_RESULT_SERIALIZER = 'json'
CELERY_TIMEZONE = TIME_ZONE
CELERY_TASK_TRACK_STARTED = True

APPEND_SLASH=False